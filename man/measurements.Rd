% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/measurements.R
\name{measurements}
\alias{measurements}
\title{Function for getting measurements table from the openAQ API}
\usage{
measurements(country = NULL, city = NULL, location = NULL,
  parameter = NULL, has_geo = NULL, date_from = NULL, date_to = NULL,
  limit = 100, value_from = NULL, value_to = NULL)
}
\arguments{
\item{country}{Limit results by a certain country -- a two-letters codem see countries() for finding code based on name.}

\item{city}{Limit results by a certain city.}

\item{location}{Limit results by a certain location.}

\item{parameter}{Limit to only a certain parameter (valid values are 'pm25', 'pm10', 'so2', 'no2', 'o3', 'co' and 'bc').
If no parameter is given, all parameters are retrieved.}

\item{has_geo}{Filter out items that have or do not have geographic information.}

\item{date_from}{Show results after a certain date. (ex. '2015-12-20')}

\item{date_to}{Show results before a certain date. (ex. '2015-12-20')}

\item{limit}{Change the number of results returned, max is 1000.}

\item{value_from}{Show results above value threshold, useful in combination with \code{parameter}.}

\item{value_to}{Show results below value threshold, useful in combination with \code{parameter}.}
}
\value{
A data.frame (dplyr "tbl_df") with UTC date and time, local date and time, country, location, city, parameter, unit, measure,
and geographical coordinates if they were available (otherwise the columns latitude and longitude are full of NA).
}
\description{
Function for getting measurements table from the openAQ API
}
\details{
The sort and sort_by parameters from the API were not included because one can still re-order the table in R.
Regarding the number of page, similarly here it does not make any sense to have it.
include_fields was not included either.
Please note that if an argument is composed by several words, e.g. 'RK Puram' as a location, it has to be written 'RK+Puram' as in a URL.

#'
}
\examples{
\dontrun{
measurements(country='IN', limit=9, city='Chennai')
measurements(country='US', has_geo=TRUE)
}
}

